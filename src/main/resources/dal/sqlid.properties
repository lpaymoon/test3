PUT.call_getseq = call mobile.getseq({name.string}, {out.seq.int})
PUT.call_getBatchSeq = call MOBILE.getBatchSeq({in_seqid.string}, {in_interval.int},{out.seq_begin.int},{out.seq_end.int})
#\u67e5\u8be2\u5546\u6237\u4fe1\u606f
GET.psql_MERINFREST.getByKey = select i.merid as merid,i.state as state, i.mername as mername, c.version as version, c.notifymode as notifymode, c.expiretime as expiretime from umpay.t_mer_inf i left join umpay.t_mer_cnf c on i.merid=c.merid where c.merid={merid.string} 
#\u67e5\u8be2\u5546\u6237\u63a5\u53e3\u4fe1\u606f
GET.psql_MERINFREST.findInter =select INFUNCODE,INVERSION,PROTOCOL,STATE,ADDRESS from umpay.t_mer_inter where merid={merid.string} and state=2
#\u67e5\u8be2\u5546\u6237\u7b7e\u540d\u4fe1\u606f
GET.psql_MERSIGNREST.getMercert=select mercert from umpay.t_mer_cnf where merid={merid.string}
#\u67e5\u8be2\u5546\u54c1\u4fe1\u606f
GET.psql_GOODINFREST.getGoodInf=select a.goodsname as goodsname, a.servtype as servtype, a.pricemode as pricemode, a.pushinf as pushinf, a.mtnum as mtnum, a.cusphone as cusphone, a.goodsdesc as goodsdesc, a.state as state from umpay.t_goods_inf a where a.merid = {merid.string} and a.goodsid ={goodsid.string}
#\u67e5\u8be2\u5546\u54c1\u7684servmonth,conmode,interval\u4fe1\u606f
#GET.GOODINFREST.getSCI=select merid,goodsid, servmonth, conmode, interval from umpay.t_mon_goods where merid = '{merid}' and goodsid='{goodsid}'
#\u67e5\u8be2\u5546\u54c1\u7684iscontrol\u4fe1\u606f
#GET.GOODINFREST.getGoodsControl=selece iscontrol from umpay.t_goodstype where goodstype='{goodstype}'
#\u67e5\u8be2\u624b\u673a\u53f7\u7684\u7b49\u7ea7
GET.psql_USERGRADEREST.getGrade=select grade,paylock,modtime from mobile.thfuserltd where mobileid={mobileid.string}
#\u67e5\u8be2\u5305\u6708\u7528\u6237\u5173\u7cfb\u8868
GET.psql_HFUSERREST.getMobileInf= select ordertime,noticetime,hasnoticed,enddate,state,bankid,serviceid,merid,verifycode from mobile.thfuser where mobileid={mobileid.string} and merid={merid.string} and goodsid={goodsid.string}
GET.psql_HFUSERREST.getuserInf=select goodsid,ordertime,noticetime,hasnoticed,billdate,enddate,state,rpid,bankid,oddinterval,serviceid,canceldate,verifycode from mobile.thfuser where merid={merid.string} and mobileid={mobileid.string}
#\u63d2\u5165\u5305\u6708\u7528\u6237\u5173\u7cfb\u8868
PUT.psql_HFUSERREST.insert=insert into mobile.thfuser (MOBILEID,MERID, GOODSID, HASNOTICED, ENDDATE, STATE, RPID, BANKID, ODDINTERVAL, SERVICEID, VERIFYCODE) values({mobileid.string},{merid.string},{goodsid.string},{hasnoticed.string},{enddate.string},2,{rpid.string},{bankid.string},{oddinterval.int},{serviceid.string},{verifycode.string})
#\u63d2\u5165\u5305\u6708\u7528\u6237\u72b6\u6001\u53d8\u5316\u8bb0\u5f55\u8868
PUT.psql_HFUSERREST.insertLog=insert into mobile.thfuserlog{_tableYYMM}(MOBILEID, MERID, GOODSID, RPID, FSTATE, BSTATE, BANKID, SERVICEID, CAUSE, DETAIL )values({mobileid.string},{merid.string},{goodsid.string},{rpid.string}, {fstate.int}, {bstate.int},{bankid.string},{serviceid.string},{cause.int},{detail.string})
#\u4fee\u6539\u5305\u6708\u7528\u6237\u5173\u7cfb\u8868
PUT.HFUSERREST.update=update mobile.thfuser set {setPara} where merid='{merid}' and goodsid='{goodsid}' and mobileid='{mobileid}' and state={fstate}
PUT.HFUSERREST.updateHasnoticed=update mobile.thfuser set hasnoticed='4' where merid='{merid}' and goodsid='{goodsid}' and mobileid='{mobileid}' and (hasnoticed='1' or hasnoticed='3')
#\u5546\u6237\u94f6\u884c\u4fe1\u606f
GET.psql_MERBANKREST.getBank=select mer.bankid as bankid from umpay.t_mer_bank mer left join umpay.t_bank_inf bank on mer.bankid=bank.bankid where merid={merid.string} and bank.state=2 and mer.state=2
GET.psql_MERBANKREST.getBankByKey=select merid,mer.bankid as bankid,mer.state as state,bankmerid,bankposid from umpay.t_mer_bank mer left join umpay.t_bank_inf bank on mer.bankid=bank.bankid where bank.state=2 and mer.merid={merid.string} and mer.bankid={bankid.string}
#\u5546\u54c1\u94f6\u884c\u4fe1\u606f\u5217\u8868
GET.psql_GOODSBANKREST.getBankInf=select checkday,merid,goodsid,gb.bankid as bankid,kstate,isrealtime,amount,verifytag from umpay.t_goods_bank gb left join umpay.t_bank_inf bank on gb.bankid=bank.bankid where bank.state=2 and gb.merid={merid.string} and gb.goodsid={goodsid.string} and( gb.kstate=13 or gb.kstate=11)
#\u67e5\u8be2\u5546\u54c1\u94f6\u884c\u4fe1\u606f\u5355\u6761\u4fe1\u606f
GET.GOODSBANKREST.findBankInf=select checkday,merid,goodsid,gb.bankid,kstate,isrealtime,amount,verifytag from umpay.t_goods_bank gb left join umpay.t_bank_inf bank on gb.bankid=bank.bankid where bank.state=2 and  merid='{merid}'and gb.bankid='{bankid}' and goodsid='{goodsid}' 
#\u53f7\u6bb5\u4fe1\u606f
GET.psql_SEGINFREST.getByKey=select provcode,provname,areacode,areaname,cardtype,nettype from mobile.seg_mobile where mobileid={mobileid.string}
#\u67e5\u8be2\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f
GET.psql_HFORDERREST.getHfOrder=select orderid,merid,goodsid,mercustid,amount,orderdate,expand,porderid,bankid,verifycode,merpriv,orderstate,version,platDate,amttype,transtype,mobileId,businesstype from umpay.T_ORDER_{_tableName} where  mobileid={mobileid.string} and  porderid={porderid.string} and expiretime>current timestamp
GET.psql_HFORDERREST.findHfOrder=select orderid,orderdate,merid,goodsid,mobileid,porderid,amount,orderstate,businesstype from umpay.T_ORDER_{_tableName} where orderid={orderid.string} and orderdate={orderdate.string} and merid={merid.string}
#\u65b0\u589e\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f
PUT.psql_HFORDERREST.addHfOrder=insert into umpay.T_ORDER_{_tableName} (businesstype,merid,orpid,bankid,merpriv,orderid,verifycode,amttype,orderdate,mobileid,sign,version,expand,amount,expiretime,mercustid,notifyurl,origamount,goodsid,porderid,reserved,accessType) values ({businesstype.string},{merid.string},{orpid.string},{bankid.string},{merpriv.string},{orderid.string},{verifycode.string},{amttype.string},{orderdate.string},{mobileid.string},{sign.string},{version.string},{expand.string},{amount.long},{expiretime.timestamp},{mercustid.string},{notifyurl.string},{origamount.long},{goodsid.string},{porderid.string},{reserved.string},{accessType.string})
#\u66f4\u65b0\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f
PUT.psql_HFORDERMERREST.UpdateHFOrder=update umpay.T_ORDER_{_tableName} set orderstate={orderstate.int},rpid={rpid.string},platdate={platdate.string},reserved={reserved.string},modtime=current timestamp where orderid={orderid.string} and orderdate={orderdate.string} and merid={merid.string}
#\u67e5\u8be2\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f\u5546\u6237
#GET.psql_UUPORDERMERREST.getUporderMer=select rpid as transrpid,orderid,orderdate,porderid,intime,bankid,verifycode,merpriv,orderstate,version,amount,amttype,transtype,goodsId,mobileid,platDate,reserved,businesstype,expiretime from umpay.t_order_{_tableName} where orderid={orderid.string} and merid={merid.string} and orderdate={orderdate.string}
#\u66f4\u65b0\u8ba2\u5355\u8868\uff08verifycode\uff09#
PUT.psql_HfOrderCommonRest.update=update umpay.T_ORDER_{_tableName} set verifycode={verifycode.string} where orderid={orderid.string} and orderdate={orderdate.string} and merid={merid.string}
#\u67e5\u8be2\u8bdd\u8d39\u7279\u6b8a\u7528\u6237\u4fe1\u606f
GET.psql_HFSPECUSERREST.getSpecUser=select busirolltype,modtime,reasontype from mobile.tspeuserlist where mobileid={mobileid.string} and busitype='1' and expireddate>{platdate.string}
#PUT.USERGRADEREST.update=update mobile.tspeuserlist set busirolltype='{busirolltype}',modtime=current timestamp,reasontype={reasontype},expireddate='{expireddate}' where mobileid='{mobileid}' and busitype='{busitype}'
PUT.USERGRADEREST.update=update mobile.tspeuserlist set {setPara},modtime=current timestamp where mobileid='{mobileid}' and busitype='{busitype}'
PUT.psql_USERGRADEREST.add=insert into mobile.tspeuserlist (mobileid,busitype,busirolltype,modtime,reasontype,expireddate,moduser) values ({mobileid.string},{busitype.string},{busirolltype.string},current timestamp,{reasontype.int},{expireddate.string},{moduser.string})
#\u67e5\u8be2\u4ea4\u6613\u5c4f\u853d\u6a21\u677f
GET.HFTRANSACL.getTransAcl=select merid,goodsid,provcode,areacode,nettype,cardtype,mobileid,banktype,goodstype,grade,validtime,invalidtime,intime,opuser from mobile.thtransacl where merid='{merid}' and provcode='{provcode}' and validtime<'{platdate}' and invalidtime>'{platdate}'

#\u67e5\u8be2\u5c0f\u989d\u4ea4\u6613
GET.psql_XETRANS.getXetrans=select intime,modtime, batchid, mercheckdate, cardtype, orderdate, bankid,goodsid,mobileid,funcode,transeq,areacode,transtate,banktrace,reserved,amount,orderid,merid,mercustid,bankcheckdate,platdate,plattime,mercheck,bankcheck,isnew from umpay.txetrans{_tablename} where rpid={transrpid.string} and platdate={platdate.string} and funcode={funcode.string}
#\u6839\u636emobileid\u548ctranseq\u67e5\u8be2\u5c0f\u989d\u4ea4\u6613\u3010\u76ee\u524d\u6c5f\u897f\u72ec\u7528\u3011#
GET.psql_TSPROVXETRANS.getXetrans=select rpid,intime,modtime,batchid,mercheckdate,cardtype,orderdate,goodsid,mobileid,funcode,areacode,transtate,banktrace,reserved,amount,orderid,merid,mercustid,bankcheckdate,platdate,plattime,mercheck,bankcheck,isnew from umpay.txetrans{_tablename} where bankid={bankid.string} and transeq={transeq.string} 
#\u65b0\u589e\u5c0f\u989d\u4ea4\u6613\uff08transall\u8868\uff09
PUT.psql_XETRANS.addXetrans=insert into mobile.transall (mobileid,rpid,bankid,funcode,banktrace,platdate,plattime,transeq,mercustid,merid,orderid,bankcheckdate,mercheckdate,batchid,area,mercheck,reserved,transtate,amount,branchid,posid,originalamount) values ({mobileid.string},{rpid.string},{bankid.string},{funcode.string},{banktrace.string},{platdate.string},{plattime.string},{transeq.string},{mercustid.string},{merid.string},{orderid.string},{bankcheckdate.string},{mercheckdate.string},{batchid.string},{areacode.string},{mercheck.int},{reserved.string},{transtate.int},{amt.long},{branchid.string},{isnew.string},{amt.long})
#\u65b0\u589e\u5c0f\u989d\u4ea4\u6613\uff08txetransyyyymm\u8868\uff09
PUT.psql_XETRANSYYYYMM.addXetrans=insert into umpay.txetrans{_tablename} (platdate,rpid,funcode,merid,goodsid,amount,mobileid,bankid,areacode,transtate,transeq,banktrace,orderid,orderdate,mercheck,cardtype,isnew,mercustid,bankcheckdate,mercheckdate,batchid,reserved,plattime) values ({platdate.string},{rpid.string},{funcode.string},{merid.string},{goodsid.string},{amt.long},{mobileid.long},{bankid.string},{areacode.string},{transtate.int},{transeq.string},{banktrace.string},{orderid.string},{orderdate.string},{mercheck.int},{cardtype.string},{isnew.int},{mercustid.string},{bankcheckdate.string},{mercheckdate.string},{batchid.string},{reserved.string},{plattime.string}) 
#\u66f4\u65b0\u5c0f\u989d\u4ea4\u6613(transall\u8868)
PUT.psql_XETRANS.udpateXetrans=update mobile.transall set transtate={transtate.int} where rpid={transrpid.string} and platdate={platdate.string}
#\u66f4\u65b0\u5c0f\u989d\u4ea4\u6613(txetransyyyymm\u8868)
PUT.psql_XETRANSYYYYMM.updateXetrans=update umpay.txetrans{_tablename} set transtate={transtate.int},modtime=current timestamp where rpid={transrpid.string} and platdate={platdate.string} and funcode={funcode.string}
#\u67e5\u8be2\u5c0f\u989d\u4ea4\u6613\u6e20\u9053\u76f8\u5173\u4fe1\u606f
GET.psql_XETRANSCHANNELREST.getXeTransChannel=select rpid,transeq,bankid from umpay.txetrans{_tablename} where platdate={platdate.string} and mobileid={mobileid.string} and amount={amount.long} and merid={merid.string} and orderid={orderid.string}

GET.psql_BANKINFREST.getByBankId=select bankname,state from umpay.t_bank_inf where bankid={bankid.string}
#\u63d2\u5165\u88ab\u62d2\u4fe1\u606f
PUT.psql_REJTRANSREST.addTrans=insert into mobile.tmnrejtrans{_tableName} (rpid,platdate,plattime,mobileid,provcode,area,merid,goodsid,orderid,bankid,amount,retcode) values ({rpid.string},{platdate.string},{plattime.string},{mobileid.string},{provcode.string},{areacode.string},{merid.string},{goodsid.string},{orderid.string},{bankid.string},{amount.long},{retCode.int})
#\u67e5\u8be2\u5546\u6237\u63a5\u53e3\u5730\u5740\u4fe1\u606f
GET.psql_MERINTERREST.getMerInter=select merid,infuncode,inversion,protocol,state,address,addressdesc from umpay.t_mer_inter where merid= {merid.string} and state=2
#\u66f4\u65b0\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f\u7528\u4e8e\u8ba2\u5355\u9501\u5b9a
PUT.psql_HFORDERREST.updateHFOrder=update umpay.t_order_{_tablename} set orderstate={orderstate.int},rpid={rpid.string},platdate={platdate.string} where mobileid={mobileid.string} and porderid={porderid.string}  and verifycode={verifycode.string} and expiretime>current timestamp and (orderstate=0 or orderstate=3)
#\u67e5\u8be2\u5546\u6237\u6e20\u9053\u62a5\u5907\u57fa\u672c\u4fe1\u606f
GET.psql_MERREFERREST.getMerRefer=select refer from umpay.t_hfmerrefer where merid={merid.string} and goodsid={goodsid.string} and state=2
#\u7528\u6237\u5c0f\u989d\u9650\u989d\u68c0\u6d4b\u5b58\u50a8\u8fc7\u7a0b
PUT.call.UserXeLtdCheck=call umpay.P_UserXeLtdCheck({in_merid.string}, {in_mobileid.string}, {in_userstate.int}, {in_bankid.string}, {in_amt.double}, {out_retcode.int}, {out_str.string})
#\u7528\u6237\u5c0f\u989d\u9650\u989d\u53d6\u6d88\u5b58\u50a8\u8fc7\u7a0b
PUT.call.UserXeLtdCancel=call umpay.P_UserXeLtdCancel({in_merid.string},{in_mobileid.string},{in_amt.double},{out_retcode.int},{out_str.string})
#\u5c0f\u989d\u4ea4\u6613\u51b2\u6b63\u63a5\u53e3
PUT.HfXeTransRevokeprocRest.UpdateXeTrans=update mobile.transall set TRANSTATE=-2 where platdate={platdate} and rpid={rpid}
#\u7528\u6237\u5c0f\u989d\u9650\u989d\u83b7\u53d6\u7f13\u5b58\u5185\u5bb9
GET.UserMerLtd.getUserMerRule = SELECT merid, bankid, usertype, timepayltd, daypayltd, monthpayltd, interval FROM UMPAY.TMERBANKRULE
#\u65e0\u7ebf\u63a5\u5165\u5546\u6237\u8ba2\u5355
PUT.psql_WXorder.addOrder=insert into umpay.T_HFWX_ORDER_{_tablename} (clientversion,orderid,orderdate,merid,goodsid,porderid,amount,expiretime,version,merpriv,expand,verifycode,IMEI,channelid,IMSI,clnt_id,ICCID,PHONETYPE,PHONEOS,PLATTPYE,SDKTPYE,ISROOT,PHONEOPERATOR,NETTYPE,LASTGPSLOCATION,GETPHONENUM,APPSLISI) values ({clientversion.string},{orderid.string},{orderdate.string},{merid.string},{goodsid.string},{porderid.string},{amount.long},{expiretime.timestamp},{version.string},{merpriv.string},{expand.string},{verifycode.string},{IMEI.string},{channelid.string},{IMSI.string},{clientid.string},{iccid.string},{model.string},{mobileos.string},{platType.int},{sdkType.int},{isRoot.int},{networkOperatorName.string},{mobileNet.string},{lastGpsLocation.string},{mobileNo.string},{userAppsList.string})
PUT.psql_Wxorder.updateOrder=update umpay.T_HFWX_ORDER_{_tablename} set orderstate={orderstate.int},modtime=current timestamp where orderdate={orderdate.string} and orderid={orderid.string} and merid={merid.string}
PUT.psql_Wxorder.modOrder=update umpay.T_HFWX_ORDER_{_tablename} set orderstate={orderstate.int},payphonenum={mobileid.string},modtime=current timestamp where orderdate={orderdate.string} and orderid={orderid.string} and merid={merid.string}
GET.psql_Wxorder.getOrder=select imei,imsi,goodsid,expiretime,porderid,orderstate,amount,verifycode,version,merpriv,expand,intime,modtime,reserved,clientversion from umpay.t_hfwx_order_{_tablename} where merid={merid.string} and orderid={orderid.string} and orderdate={orderdate.string} and expiretime > current timestamp
PUT.psql_Wxorder.lockOrder=update umpay.T_HFWX_ORDER_{_tablename} set orderstate={orderstate.int},modtime=current timestamp where  merid={merid.string} and orderid={orderid.string} and orderdate={orderdate.string} and expiretime>current timestamp and (orderstate=0 or orderstate=3)
GET.psql_Wxorder.getOrderList=select orderid,merid,orderdate,clientversion from umpay.T_HFWX_ORDER_{_tablename} where IMSI={IMSI.string} and IMEI={IMEI.string}
GET.psql_Wxorder.findOrders = select orderid,orderdate,clientversion,merid,IMEI,IMSI from umpay.t_hfwx_order_{_tablename} where clnt_id={clientid.string}
GET.psql_Wxorder.queryOrders =(select orderid,orderdate,clientversion,merid,IMEI,IMSI,iccid,orderstate,payphonenum,intime,modtime from umpay.t_hfwx_order_{_tablename} where IMSI={IMSI.string} and IMEI={IMEI.string} and iccid={iccid.string} UNION ALL select orderid,orderdate,clientversion,merid,IMEI,IMSI,iccid,orderstate,payphonenum,intime,modtime from umpay.t_hfwx_order_{_tablename2} where IMSI={IMSI.string} and IMEI={IMEI.string} and iccid={iccid.string}) order by modtime desc fetch first 1 row only
#\u65e0\u7ebf\u7528\u6237\u4fe1\u606f
PUT.psql_wxUserMobile.update=update umpay.t_hfwx_user set mobileid={mobileid.string},IMSI={IMSI.string},modtime=current timestamp  where IMEI={IMEI.string} and plattype={platType.string}
PUT.psql_wxUserMobile.insert=insert into umpay.t_hfwx_user (IMEI,plattype,IMSI,mobileid) values ({IMEI.string},{platType.string},{IMSI.string},{mobileid.string})
#\u5c0f\u989d\u4ea4\u6613\u7d2f\u8ba1\u4fe1\u606f\u67e5\u8be2#
GET.psql_XEuserltd.getXEuserltd=select daypayed,monthpayed,grade,modtime,dealtimes,state from mobile.TXEUSERLTD where mobileid={mobileid.string}
#\u67e5\u8be2\u5546\u54c1\u8ba1\u8d39\u4ee3\u7801\u5217\u8868#
GET.psql_GoodsServiceId.getGoodsServiceids=select g.priority as priority,s.serviceid as serviceid,s.state as state,s.feetype as feetype,s.amount as amount,s.detail as detail from umpay.T_GOODS_SERVICEID g inner join umpay.T_SERVICE_INF s on g.serviceid=s.serviceid where g.merid={merid.string} and g.goodsid={goodsid.string} and g.state=2 and s.state=2
#\u67e5\u8be2\u5305\u6708\u5b9a\u5236\u5173\u7cfb\u8ba1\u8d39\u4ee3\u7801#
GET.psql_THFUSER.getBYServiceid=select serviceid from mobile.thfuser where mobileid={mobileid.string} and state=2
#\u65e0\u7ebf\u4fe1\u606f#
PUT.psql_WmersmsInfRest.upValidnum=update umpay.t_hfsms_wmerj_{_tablename} set validnum=validnum+1 ,modtime=current timestamp where merid={merid.string} and goodsid={goodsid.string} and mobileid={mobileid.string}
PUT.psql_WmersmsInfRest.insertValidnum=insert into umpay.t_hfsms_wmerj_{_tablename} (merid,goodsid,mobileid,validnum,modtime,intime) values ({merid.string},{goodsid.string},{mobileid.string},1,current timestamp,current timestamp)
PUT.psql_WmersmsInfRest.downValidnum=update umpay.t_hfsms_wmerj_{_tablename} set validnum=validnum-1 ,modtime=current timestamp where merid={merid.string} and goodsid={goodsid.string} and mobileid={mobileid.string} and validnum>0

#\u65e0\u7ebf\u5ba2\u6237\u7aef\u7edf\u8ba1\u4fe1\u606f#
PUT.psql_wxclientuser.addinf=insert into umpay.t_hfwx_user (sourcemer,IMEI,platType,clientversion,mobileos,model,channelid) values ({sourcemer.string},{IMEI.string},{platType.int},{clientversion.string},{mobileos.string},{model.string},{chnlid.string})
GET.psql_wxclientuser.selectInf=select clientversion,mobileos,model from umpay.t_hfwx_user where IMEI={IMEI.string} and platType={platType.int}
PUT.psql_wxclientuser.update=update umpay.t_hfwx_user set clientversion={clientversion.string},mobileos={mobileos.string},channelid={chnlid.string},modtime=current timestamp where IMEI={IMEI.string} and platType={platType.int}
PUT.psql_wxclientuser.updateOldInf=update umpay.t_hfwx_user set sourcemer={sourcemer.string} where IMEI={IMEI.string} and platType={platType.int} and sourcemer='0000'
GET.psql_wxUser.getuserinf=select mobileid,IMSI,clientversion,mobileos,model from umpay.t_hfwx_user  where IMEI={IMEI.string} and platType={platType.int}
#\u98ce\u63a7\u88ab\u62d2\u633d\u56de\u4ea4\u6613#
PUT.psql_HfrestoreRest.add=insert into UMPAY.T_HFRESTORE(operid,mobileid,merid,goodsid,rpid,platdate,amount,porderid,state,opertime,moduser,modtime) values ({operid.string},{mobileid.string},{merid.string},{goodsid.string},{rpid.string},{platdate.string},{amount.int},{porderid.string},{state.int},current timestamp,{moduser.string},current timestamp)
PUT.HfrestoreRest.update=update UMPAY.T_HFRESTORE set {setPara},modtime=current timestamp where {wherePara}
#complex rest;class:HfQueryOrderByMonthRest;dbOff
GET.psql_HfQueryOrderByMonthRest.get=select rpid as transrpid,orderid,orderdate,porderid,intime,bankid,verifycode,merpriv,orderstate,version,amount,amttype,transtype,goodsId,mobileid,platDate from umpay.t_order_{_tableName} where orderid={orderid.string} and merid={merid.string} and orderdate={orderdate.string}
#\u67e5\u8be2\u52a8\u6001\u9a8c\u8bc1\u4fe1\u606f#
GET.psql_HFUSERINFO.getUserInfo=select randomkey,verifytimes,intime,modtime,expiretime from umpay.TVERIFYINFO_{_tablename} where mobileid={mobileid.string}
#\u66f4\u65b0\u52a8\u6001\u9a8c\u8bc1\u4fe1\u606f#
PUT.psql_HfUserInfo.update=update umpay.TVERIFYINFO_{_tablename} set randomkey={randomkey.string},verifytimes={verifytimes.int},expiretime={expiretime.timestamp},modtime=current timestamp where mobileid={mobileid.string}
#\u65b0\u589e\u52a8\u6001\u9a8c\u8bc1\u4fe1\u606f#
PUT.psql_HfUserInfo.insert=insert into umpay.TVERIFYINFO_{_tablename} (mobileid,randomkey,verifytimes,modtime,intime,expiretime) values ({mobileid.string},{randomkey.string},{verifytimes.int},current timestamp,current timestamp,{expiretime.timestamp}) 
#PlatOrderRest;class:PlatOrderRest;dbOn
PUT.psql_PlatOrderRest.doCreate=insert into umpay.T_HFWX_PLATORDER_{_tablename}( PLATORDERID, PORDERID,BUSINESSTYPE, ORDERID, ORDERDATE, RETCODE, MERID, ORDERSTATE, GOODSID, GOODSDESC, CLIENTVERSION, IMEI) values ({platorderid.string},{porderid.string},{businesstype.string},{orderid.string},{orderdate.string},{retcode.int},{merid.string},{orderstate.int},{goodsid.string},{goodsdesc.string},{clientversion.string},{IMEI.string})
PUT.psql_PlatOrderRest.doUpdate=update umpay.T_HFWX_PLATORDER_{_tablename} set orderid={orderid.string}, retcode={retCode.int}, orderstate={orderstate.int}, orderdate={orderdate.string}, modtime=current timestamp where platorderid={platorderid.string}
GET.psql_PlatOrderRest.doShow=select businesstype, porderid, orderid, orderdate, orderstate, merid, goodsid, goodsdesc, retcode, clientversion, imei from umpay.T_HFWX_PLATORDER_{_tablename} where platorderid = {platorderid.string}
#HfPlatOrderLockRest;dbOn
PUT.psql_HfPlatOrderLockRest.doLockUpdate=update umpay.T_HFWX_PLATORDER_{_tablename} set orderstate = 1 where orderstate = 0 and platorderid = {platorderid.string}
#WxTransRecoder
#GET.psql_TRANSRECODER.getTransRecoder=select t.platdate,t.amount,t.orderid,g.goodsname,g.cusphone from mobile.transall t left join umpay.t_goods_inf g on t.merid=g.merid and t.goodsid=g.goodsid where t.mobileid={mobileid.string} and t.platdate>{platdate.string}
GET.psql_TRANSRECODER.oldgetTransRecoder=select t.platdate,t.merid,t.amount,t.orderid,t.transtate,t.mercustid as goodsname,m.cusphone from umpay.TXETRANS{_tableNameXE} t left join umpay.t_mer_inf m on t.merid=m.merid where t.mobileid={mobileid.string} and t.platdate>{platdateStart.string} and t.platdate<{platdateEnd.string}
#GET.psql_TRANSRECODER.getTransRecoder=select t.platdate,t.amount,t.orderid,t.mercustid as goodsname,m.cusphone from umpay.TXETRANS{_tableName1} t left join umpay.t_mer_inf m on t.merid=m.merid where mobileid={mobileid.string} union select t1.platdate,t1.amount,t1.orderid,t1.mercustid as goodsname,m1.cusphone from umpay.TXETRANS{_tableName2} t1 left join umpay.t_mer_inf m1 on t1.merid=m1.merid where mobileid={mobileid.string}
GET.psql_TRANSRECODER.getTransRecoder=select t.platdate,t.merid,t.amount,t.orderid,t.bankid,t.transtate,t.mercustid as goodsName,m.cusphone from umpay.TXETRANS{_tableNameXE} t,umpay.t_mer_inf m where t.merid=m.merid and t.mobileid={mobileid.string} and platdate>={platdateStart.string} and platdate<={platdateEnd.string} union all select t.platdate,t.merid,t.amount,t.orderid,t.bankid,t.billstate as transtate,g.goodsname as goodsName,m.cusphone from umpay.TMWTRANS{_mwTable} t,umpay.t_mer_inf m,umpay.t_goods_inf g where t.merid=m.merid and t.merid=g.merid and t.goodsid=g.goodsid and t.mobileid={mobileid.string} order by platdate desc

#HfChannelOrder
PUT.psql_channelOrder.addOrder=insert into umpay.t_hf_chnl_order_{_tablename} (channelorderid,channelid,channeldate,merid,goodsid,orderdate,orderid,porderid,mobileid,amount,version,channelpriv,expand,retcode) values ({channelorderid.string},{channelid.string},{channeldate.string},{merid.string},{goodsid.string},{orderdate.string},{orderid.string},{porderid.string},{mobileid.string},{amount.long},{version.string},{channelpriv.string},{expand.string},{retCode.string})
GET.psql_channelOrder.getOrder=select merid,goodsid,amount,mobileid,orderstate,channelpriv,expand,version from umpay.t_hf_chnl_order_{_tablename} where channelorderid={channelorderid.string} and channelid={channelid.string} and channeldate={channeldate.string}
PUT.psql_channelOrder.updateOrder=update umpay.t_hf_chnl_order_{_tablename} set orderstate={orderstate.int},modtime=current timestamp where merid={merid.string} and orderid={orderid.string} and orderdate={orderdate.string}
GET.psql_channelOrder.getOrderInf=select channelorderid,channelid,channeldate,goodsid,version,channelpriv,expand from umpay.t_hf_chnl_order_{_tablename} where merid={merid.string} and orderid={orderid.string} and orderdate={orderdate.string}
#HfChannelCheck
GET.psql_chnlcheck.getchnlinf=select mercert,state,channelname,notifyurl,orderurl from umpay.T_HF_CHNL_INF where channelid={channelid.string}
GET.psql_chnlcheck.getchnlgoodinf=select state from umpay.t_hf_chnl_goods where channelid={channelid.string} and merid={merid.string} and goodsid={goodsid.string}
#HfChannelBankInf
GET.psql_chnlbank.getBank=select state from umpay.t_hf_chnl_bank where channelid={channelid.string} and bankid={bankid.string}
#HfUserInfRest(\u6839\u636e\u624b\u673a\u53f7\u67e5\u8be2\u5305\u6708\u7528\u6237\u5173\u7cfb\u5217\u8868)
GET.psql_hfuserinfrest.getusers=select merid,goodsid,ordertime,noticetime,hasnoticed,billdate,enddate,state,rpid,bankid,oddinterval,serviceid,canceldate,verifycode from mobile.thfuser where mobileid={mobileid.string}
#WxUserReplyRest(\u5ba2\u6237\u7aef\u53cd\u9988\u4fe1\u606f)
PUT.psql_wxuserreply.addInfo=insert into umpay.t_hf_wxuser_reply (IMEI,replyTime,clientName,platType,versionCode,replyInfo,contacInfo,replyType) values ({IMEI.string},{replyTime.string},{clientName.string},{platType.int},{versionCode.string},{replyInfo.string},{contacInfo.string},{replyType.int})
#WxClientConfRest
GET.psql_WXCLIENTCONF.getConfig=select c.forceversion,c.prikey,c.downloadurl,i.description,i.versioncode,i.clientversion from umpay.t_hf_client_cnf c join umpay.t_hf_client_inf i on c.clientType=i.clientType where c.clientname={clientName.string} and c.clienttype={clientType.string} and i.state=2
#GET.psql_WXCLIENTCONF.getConfig=select i1.versioncode as forceversion,c.prikey,c.downloadurl,i.description,i.versioncode,i.clientversion from umpay.t_hf_client_cnf c,umpay.t_hf_client_inf i,umpay.t_hf_client_inf i1 where c.clientType=i.clientType and c.forceversion=i1.clientversion and c.clientname={clientName.string} and c.clienttype={clientType.string} and i.state=2
#\u4eba\u5de5\u9000\u8d39\u4fe1\u606f\u67e5\u8be2\u4e0e\u65b0\u589e
PUT.psql_HfReFundsRest.doCreate=insert into UMPAY.T_HF_REFUNDS(PLATDATE,RPID,MERID,GOODSID,AMOUNT,MOBILEID,BANKID,MERCUSTID,ORDERID,ORDERDATE,BANKCHECK,BANKCHECKDATE,OTRANSTIME,TRANSEQ,RESERVED)values({platdate.string},{transrpid.string},{merid.string},{goodsid.string},{amount.long},{mobileid.string},{bankid.string},{mercustid.string},{orderid.string},{orderdate.string},{bankcheck.int},{bankcheckdate.string},{TransTime.string},{transeq.string},{reserved.string})
GET.psql_HfReFundsRest.doShow=select platdate,rpid as transrpid,merid,goodsid,amount,mobileid,bankid,mercustid,orderid,orderdate,bankcheck,bankcheckdate,otranstime,transeq,reserved,moduser,modtime,intime from UMPAY.T_HF_REFUNDS where PLATDATE = {platdate.string} and RPID = {transrpid.string}
#\u8bdd\u8d39\u51b2\u6b63
PUT.psql_HfBillUndoRest.doUpdate=update umpay.txetrans{_tablename} set transtate=-1,modtime=current timestamp where rpid={transrpid.string} and platdate={platdate.string} and funcode={funcode.string} and transtate=0
#hfinformfailRest
PUT.psql_UPINFORMFAIL.addInformFail=insert into umpay.T_UPINFORM_FAIL_{_tablename} (transdate,rpid,mobileid,merid,goodsid,orderdate,orderid,bankid,state,bankcheckdate,version,amount,merpriv,channelid,appid,trans_type,redo_times) values ({transdate.string},{rpid.string},{mobileid.string},{merid.string},{goodsid.string},{orderdate.string},{orderid.string},{bankid.string},{state.int},{bankcheckdate.string},{version.string},{amount.long},{merpriv.string},{channelid.string},{appid.string},{transtype.string},{taketimes.int})
#XeTransChannelRest
PUT.psql_XETRANSYYYYMM.updateXetransState=update umpay.txetrans{_tablename} set transtate={transtate.int},modtime=current timestamp where rpid={transrpid.string} and platdate={platdate.string} and funcode={funcode.string} and transtate={bstate.int}
PUT.psql_XETRANS.udpateXetransState=update mobile.transall set transtate={transtate.int} where rpid={transrpid.string} and platdate={platdate.string} and transtate={bstate.int}
#HfOrderVerifyInfo
PUT.psql_orderVerifyInfo.insert=insert into umpay.t_order_verifyinfo_{_tablename} (orderid,orderdate,merid,mobileid,randomkey,expiretime) values ({orderid.string},{orderdate.string},{merid.string},{mobileid.string},{randomkey.string},{expiretime.timestamp})
GET.psql_orderVerifyInfo.getInfo=select mobileid,randomkey,expiretime,gettimes,wrongnum from umpay.t_order_verifyinfo_{_tablename} where orderid={orderid.string} and merid={merid.string} and orderdate={orderdate.string}
PUT.orderVerifyInfo.update=update umpay.t_order_verifyinfo_{_tablename} set {setPara},modtime=current timestamp where orderid='{orderid}' and orderdate='{orderdate}' and merid='{merid}'
#wxClientBindInf
PUT.psql_hfWxBindInf.add=insert into umpay.t_wx_bind_inf (IMEI,IMSI,mobileid,publickey) values ({IMEI.string},{IMSI.string},{mobileid.string},{publicKey.string})
GET.psql_hfWxBindInf.get=select imsi as IMSI,imei as IMEI,mobileid,publickey as publicKey from umpay.t_wx_bind_inf where imsi={IMSI.string} and imei={IMEI.string}
PUT.psql_hfWxBindInf.update=update umpay.t_wx_bind_inf set publicKey={publicKey.string},modtime=current timestamp where imsi={IMSI.string} and imei={IMEI.string}
#BJVGOPUserInfRest
GET.psql_VGOPUSERREST.getVGOPUser=select mobile_id,mobile_state,state_start_dt,card_type,mod_user_name,mod_time,in_time from umpay.tvgopuser where mobile_id={mobileid.string}
#HFClientUserRest
PUT.psql_clientUser.insert=insert into umpay.t_wx_user (CLNT_ID,CLNT_TYPE,IMEI,IMSI,AREA_CODE,CLNT_VER,MOBILE_OS_VER,MOBILE_VER,CHNL_ID,INST_TYPE,CLNT_UPD_VER,CLNT_UPD_TYPE) values ({clnt_id.string},{clnt_type.int},{IMEI.string},{IMSI.string},{area_code.string},{clnt_ver.string},{mobile_os_ver.string},{mobile_ver.string},{chnl_id.string},{inst_type.int},{clnt_upd_ver.string},{clnt_upd_type.int})
GET.psql_clientUser.get = select clnt_id as clientId,clnt_type as platType,IMEI,IMSI,area_code as areacode,clnt_ver as clientversion,mobile_os_ver as mobileos,mobile_ver as model,chnl_id as channelid,inst_type as installType,clnt_upd_ver as updateVersion,clnt_upd_type as updateType,in_time as intime,mod_time as modtime from umpay.t_wx_user where clnt_id={clnt_id.string} and clnt_type={clnt_type.int}
GET.clientUser.find = select clnt_id as clientId,clnt_type as platType,IMEI,IMSI,area_code as areacode,clnt_ver as clientversion,mobile_os_ver as mobileos,mobile_ver as model,chnl_id as channelid,inst_type as installType,clnt_upd_ver as updateVersion,clnt_upd_type as updateType,in_time as intime,mod_time as modtime from umpay.t_wx_user where {wherePara}
PUT.clientUser.update = update umpay.t_wx_user set {setPara} where clnt_id='{clientid}' and clnt_type={platType}
#Ying Xiao SMS
GET.psql_HFYXCONFIGREST.find=select sms_name as smsName, sms_sub_no as smsSubNo, sms_start_time as smsStartTime, sms_end_time as smsEndTime, end_sms_content as endSmsContent, pause_sms_content as pauseSmsContent, sms_code_type as smsCodeType, sms_content as smsContent, mer_id as merid, goods_id as goodsid, a.sms_state as state from umpay.T_SMS_MARKETING_TASK a, umpay.T_SMS_MARKETING_CODE b where sms_sub_no = {called.string} and sms_code = {msgCon.string} and a.sms_id = b.sms_id and a.sms_state IN (0,1) and b.sms_state=2
PUT.psql_HFYXCONFIGREST.addResponse=update UMPAY.T_SMS_MARKETING_TASK set response_num=response_num+1 where sms_sub_no={called.string} and sms_state in (0,1)
PUT.psql_HfYXConfigRest.doAddOrder=update UMPAY.T_SMS_MARKETING_TASK set ORDER_NUM=ORDER_NUM+1 where sms_state IN (0,1) AND sms_sub_no={called.string}
PUT.psql_HfYXConfigRest.doAddPay=update UMPAY.T_SMS_MARKETING_TASK set SUCC_NUM=SUCC_NUM+1 where sms_state IN (0,1) AND sms_sub_no={called.string}
#Mer BusinessType
GET.psql_HFMERBUSI.get=select state from umpay.t_merbusi_conf where mer_id={merid.string} and biz_type={businesstype.string} 
#HaiNanCP
PUT.psql_HFHNCPUSER.addUserinfo=insert into umpay.THFHNCPUSER(mobile_id,mer_id,state,src,valid_time,trans_seq,pay_seq) values({mobileid.string},{merid.string},{state.int},{sourcemer.string},{validtime.string},{transeq.string},{orpid.string})
GET.psql_HNCPUSERREST.getHNCPUser=select mer_id as merid,mobile_id as mobileid,state,src as sourcemer,valid_time as validtime,trans_seq as transeq,pay_seq as oprid from umpay.THFHNCPUSER where mobile_id={mobileid.string} and mer_id={merid.string}
PUT.psql_HFHNCPUSER.updateUserinfo=update umpay.THFHNCPUSER set state={state.int},src={sourcemer.string},valid_time={validtime.string},trans_seq={transeq.string},pay_seq={orpid.string},mod_time=current timestamp where mobile_id={mobileid.string} and mer_id={merid.string}
#BJWHITEUSERLIST
GET.psql_HFBJWHITEUSERREST.getInfo=select mobile_id as mobileid,user_type as usertype from UMPAY.T_HFWHITEUSER_INFO where mobile_id ={mobileid.string} and user_type={usertype.int}
#HFXERULES
GET.psql_HFXEPAYRULESREST.getRules=select prov_code as provcode ,area_code as areacode ,mer_id as merid ,goods_id as goodsid ,card_type as cardtype,fee_type as feetype,grade ,surplus_acl as surplusacl,acce_time as accesstimeacl,voice_acl as voiceacl,brandtime_acl as brandtimeacl ,user_stautes as userstatus ,balsign_acl as balsignacl,starttime_acl as starttimeacl,mod_user_id ,mod_time,in_time from umpay.t_hfxepayrules where prov_code = {provcode.string}
########################UPRest_SQL####################################################
#PUT.psql_UPORDERREST.addOrder=insert into umpay.T_UPORDER_{_tableName} (businesstype,merid,orpid,bankid,merpriv,orderid,amttype,orderdate,mobileid,version,expand,amount,expiretime,mercustid,goodsid,platordid,reserved) values ({businesstype.string},{merid.string},{orpid.string},{bankid.string},{merpriv.string},{orderid.string},{amttype.string},{orderdate.string},{mobileid.string},{version.string},{expand.string},{amount.long},{expiretime.timestamp},{mercustid.string},{goodsid.string},{platordid.string},{reserved.string})
PUT.psql_UPORDERREST.addOrder=insert into umpay.T_UPORDER_{_tableName} (PLATORDID,ORDERID,RET_URL,EXPAND,CHNL_ID,MERCUSTID,IMSI,ICCID,PHONEOS,PHONEOPERATOR,APPDESC,ORDERDATE,MERID,GOODSID,MOBILEID,AMOUNT,BANKID,BUSINESSTYPE,EXPIRETIME,VERSION,ORPID,MERPRIV,AMTTYPE,APPID,SDKVERSION,SDKTYPE,IMEI) values ({platordid.string},{orderid.string},{returl.string},{expand.string},{channelid.string},{mercustid.string},{IMSI.string},{iccid.string},{phoneos.string},{nettype.string},{appdesc.string},{orderdate.string},{merid.string},{goodsid.string},{mobileid.string},{amount.long},{bankid.string},{businesstype.string},{expiretime.timestamp},{version.string},{orpid.string},{merpriv.string},{amttype.string},{appid.string},{sdkversion.string},{sdktype.int},{IMEI.string})
GET.psql_UPORDERREST.getOrder=select platordid,orderid,merid,goodsid,mercustid,amount,orderdate,expand,bankid,merpriv,orderstate,version,amttype,mobileid,businesstype,transid,appid,chnl_id as channelid,imei,imsi,transdate from umpay.T_UPORDER_{_tableName} where  platordid={platordid.string} and expiretime>current timestamp
GET.psql_UPORDERREST.findOrder=select platordid,orderid,orderdate,merid,goodsid,mobileid,amount,orderstate,businesstype from umpay.T_UPORDER_{_tableName} where platordid={platordid.string}
#\u66f4\u65b0\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f\u7528\u4e8e\u8ba2\u5355\u9501\u5b9a
PUT.UPORDERREST.updateOrder=update umpay.t_uporder_{_tablename} set {setPara}, modtime=current timestamp where platordid='{platordid}'  and expiretime>current timestamp 
PUT.psql_UPORDERMERREST.UpdateOrder=update umpay.T_UPORDER_{_tableName} set shipstate={shipstate.int},modtime=current timestamp where orderid={orderid.string} and orderdate={orderdate.string} and merid={merid.string}
#\u67e5\u8be2\u8bdd\u8d39\u8ba2\u5355\u4fe1\u606f\u5546\u6237
GET.psql_UPORDERMERREST.getorderMer=select platordid,orderid,merid,goodsid,mercustid,amount,orderdate,expand,bankid,merpriv,orderstate,version,amttype,mobileid,businesstype,transid,appid,chnl_id as channelid,imei,imsi,transdate from umpay.t_UPorder_{_tableName} where orderid={orderid.string} and merid={merid.string} and orderdate={orderdate.string}
#\u66f4\u65b0\u8ba2\u5355\u8868\uff08verifycode\uff09#

PUT.psql_UPTRANSYYYYMM.addtrans=insert into umpay.t_uptrans_{_tablename} (TRANSID,FUNCODE,GOODSID,PLATORDID,MERCUSTID,EXPAND,TRANSDATE,TRANSTIME,MERID,AMOUNT,MOBILEID,BANKID,ORDERDATE,PROVCODE,AREACODE,TRANSEQ,SERVPRIV,MERPRIV,BANK_TRACE) values ({transid.string},{funcode.string},{goodsid.string},{platordid.string},{mercustid.string},{expand.string},{transdate.string},{TransTime.string},{merid.string},{amount.long},{mobileid.string},{bankid.string},{orderdate.string},{provcode.string},{areacode.string},{transeq.string},{servpriv.string},{merpriv.string},{banktrace.string}) 
#PUT.psql_UPTRANSYYYYMM.addtrans=insert into umpay.t_uptrans_{_tablename} (platdate,rpid,funcode,merid,goodsid,amount,mobileid,bankid,areacode,transtate,transeq,banktrace,orderid,orderdate,mercheck,cardtype,isnew,mercustid,bankcheckdate,mercheckdate,batchid,reserved,plattime) values ({platdate.string},{rpid.string},{funcode.string},{merid.string},{goodsid.string},{amt.long},{mobileid.long},{bankid.string},{areacode.string},{transtate.int},{transeq.string},{banktrace.string},{orderid.string},{orderdate.string},{mercheck.int},{cardtype.string},{isnew.int},{mercustid.string},{bankcheckdate.string},{mercheckdate.string},{batchid.string},{reserved.string},{plattime.string}) 
#PUT.psql_UPTRANSYYYYMM.updatetrans=update umpay.t_uptrans_{_tablename} set transtate={transtate.int},modtime=current timestamp where transid={transid.string} and funcode={funcode.string}
#PUT.psql_UPTRANSYYYYMM.updatetransBytranSeq=update umpay.t_uptrans_{_tablename} set transtate={transtate.int},modtime=current timestamp where transeq={transeq.string} and funcode={funcode.string} and (transtate=-1 or transtate=-99)
PUT.UPTRANSYYYYMM.updatetransBytranSeq=update umpay.t_uptrans_{_tablename} set {setPara},modtime=current timestamp where transeq='{transeq}' and funcode='{funcode}' and (transtate=-1 or transtate=-99)

PUT.psql_UPTRANSYYYYMM.UPtransBytranSeq=update umpay.t_uptrans_{_tablename} set BANK_TRACE={banktrace.string},SERVPRIV={servpriv.string},modtime=current timestamp where transeq={transeq.string} and funcode={funcode.string}
GET.psql_UPTRANS.getUPtransBYtransSeq=select platordid,transtate,transid,transdate,transtime,merid,goodsid,amount,bankid,mercheck,bankcheckdate,mercheckdate,batchid,card_type as cardtype,servpriv,orderdate,areacode,provcode,mobileid,bank_trace as banktrace,bank_check as bankcheck from  umpay.t_uptrans_{_tablename} where  transeq={transeq.string} and funcode={funcode.string}
#GET.psql.getGoodsServiceid=select serviceid,servicename,serviceid1,servicename1,serviceid2,servicename12,state,fee_type as feetype,merpriv,expand,amount,busi_desc as from umpay.t_upserviceinf where merid={merid.string} and goodsid={goodsid.string} and gateid={gateid.string}
GET.psql.getGoodsServiceid=select serviceid,servicename,serviceid1,servicename1,serviceid2,servicename2,state,fee_type as feetype,merpriv,expand,amount,busi_desc as busidesc from umpay.t_upservice_inf where merid={merid.string} and goodsid={goodsid.string} and gateid={gateid.string}